"use strict";function Starbase(){let e={};function t(){let e,t={},r={},n=t=>{e&&"function"==typeof e&&e(t)};return t.onEvent=(t=>{e=t}),t.put=(async(e,t)=>{r[e]=t;let a={event:"write",key:e,timestamp:Date.now()};return n(a),a}),t.get=(async e=>({key:e,value:r[e]})),t.del=(async e=>{let t=[];(t="string"==typeof e?[e]:e).forEach(e=>{delete r[e]});let a={event:"delete",keys:t,timestamp:Date.now()};return n(a),a}),t.list=(async e=>{e=e||{};let t=[];for(let n in r)e.values?t.push({key:n,value:r[n]}):t.push(n);e.values?t.sort((e,t)=>e.key<t.key?-1:e.key>t.key?1:0):t.sort(),e.reverse&&t.reverse();let n=[];for(let r=0;r<t.length&&!(e.limit&&n.length>=e.limit);r++)e.gt||e.lt?(e.values&&(e.gt&&t[r].key<=e.gt||e.lt&&t[r].key>=e.lt||n.push(t[r])),e.values||e.gt&&t[r]<=e.gt||e.lt&&t[r]>=e.lt||n.push(t[r])):n.push(t[r]);return n}),t.importDB=(async e=>{e.forEach(e=>{r[e.key]=e.value});let t={event:"importDB",keys:e.map(e=>e.key),timestamp:Date.now()};return n(t),t}),t.exportDB=(async()=>t.list({values:!0})),t.deleteDB=(async()=>{r={};let e={event:"deleteDB",timestamp:Date.now()};return n(e),e}),t}function r(e){let t;const r=e=>{t&&"function"==typeof t&&t(e)},n=(e,t)=>{let r={};for(let a in e)t[a]&&("object"==typeof e[a]?r[a]=n(e[a],t[a]):r[a]=e[a]);return r},a=(e,t)=>{let r=!1;if("string"==typeof t&&"string"==typeof e){let r=new RegExp(t,"ig");return!e||!e.match(r)}for(let n in t){if(!e[n]){r=!0;break}if(typeof t[n]!=typeof e[n]){r=!0;break}if(typeof t[n]==typeof e[n]&&(r=a(e[n],t[n])))break}return r},o=e=>{let t,r=(t=e?e.toString():"/").toString().replace(/\/\//g,"/").replace(/^\//,"").replace(/\/$/,"").replace(/\/\//g,"/").split("/"),n="/"+r.slice(0,-1).join("/"),a=r.slice(-1)[0],o="";return"/"!==n&&(o="/"),{path:n+o+a,channel:n,key:a,slash:o}},s=(e,t)=>{let r=o(t).path;return{channel:()=>r,put:t=>i(e,r,t),get:t=>l(e,r,t),del:()=>c(e,r),list:t=>p(e,r,t),parse:(e=null)=>o((e||r).toString()),path:t=>{t||(t="/");let n="";return"/"!==r&&(n="/"),s(e,r+n+t)}}},i=(e,t,n)=>new Promise((a,s)=>{if(!n)return s({code:400,message:"Data is required."});if(t.match(/\!/))return s({code:400,message:"Invalid Path. The exclamation point (!) is a reserved character."});let{path:c,channel:p,key:u,slash:d}=o(t);e.put("!"+p+"!"+u,n).then(t=>{let n={event:t.event,path:p+d+(u||""),channel:p,key:u||"",timestamp:t.timestamp};if("/"===p&&(!u||""===u))return r(n),a(n);l(e,p).then(e=>{r(n),a(n)}).catch(t=>{i(e,p,{}).then(e=>{r(n),a(n)}).catch(s)})}).catch(s)}),l=(e,t,r)=>new Promise((a,s)=>{let{path:i,channel:l,key:c,slash:u}=o(t);e.get("!"+l+"!"+c).then(t=>{if(!t.value)return s({code:404,message:"Not Found"});let o={path:l+u+c,channel:l,key:c,data:t.value};r&&r.projection&&"object"==typeof r.projection&&(o=n(o,r.projection)),r&&r.children?p(e,o.path,r.children).then(e=>{e&&e.data?o.children=e.data:o.children=[],a(o)}):a(o)}).catch(s)}),c=(e,t)=>new Promise((n,a)=>{let{path:s,channel:i,key:l,slash:c}=o(t);e.list({gt:"!"+i+c+l+"!",lt:"!"+i+c+l+"￿/"}).then(t=>{t.unshift("!"+i+"!"+l),e.del(t).then(e=>{let t=e.keys.map(e=>e.replace(/^\!/,"").replace(/\!/g,"/").replace(/\/\//g,"/").replace(/\/\//g,"/")),a={event:e.event,paths:t,timestamp:e.timestamp};r(a),n(a)})})}),p=(e,t="/",r={})=>new Promise((o,s)=>{r&&"object"==typeof r||(r={});let i=t.toString(),l="";"/"!==i&&(l="/",i="/"+i.replace(/^\//,"").replace(/\/$/,""));let c="!"+i+"!"+(r.gt||""),p="!"+i+"!"+(r.lt||"￿");!!r.deep&&(p="!"+i+l+"￿"),e.list({gt:c,lt:p,reverse:r.reverse||!1,values:r.values||!1,limit:r.limit||null}).then(e=>{let t=null,s=e.map(e=>{"object"!=typeof e&&(e={key:e});let a=e.key.replace(/^\!/,"").split("!")[0],o=e.key.replace(/^\!/,"").split("!")[1]||"/",s="";"/"!==a&&(s="/");let i={path:a+s+o,channel:a,key:o};return t=i.key,e.value&&(i.data=e.value),r.projection&&"object"==typeof r.projection&&(i=n(i,r.projection)),i}).filter(e=>!(r.values&&e.data&&r.filter&&"object"==typeof r.filter&&a(e.data,r.filter))),i=null;t&&(i={},r.limit&&(i.limit=parseInt(r.limit)),r.reverse?(i.reverse=!0,i.lt=t):(i.reverse=!1,i.gt=t),r.values&&(i.values=!0),r.filter&&(i.filter=r.filter),r.projection&&(i.projection=r.projection)),o({data:s,cursor:i})})});let u=s(e,"/");return u.onEvent=(e=>{t=e}),u}function n(e=[],t={},r={}){return new Promise((n,a)=>{let o=t.method||null,s=(t.path||"/").toString(),i=[];if(e&&"object"==typeof e&&!e.forEach&&(e=[e]),e.forEach(e=>{if(e.path){let t=((e,t)=>{let r=(e||"").toString().replace(/^\/|\/$/g,"").split("/"),n=(t||"").toString().replace(/^\/|\/$/g,"").split("/");if(r.length!==n.length)return null;let a={};for(let e=0;e<r.length;e++)if(r[e]!==n[e]){if(":"!==r[e].substring(0,1)){a=null;break}a[r[e].substring(1,r[e].length)]=n[e]}return a})(e.path,s);if(t&&e.rules&&e.rules[o]){let r;e.methods&&e.methods[o]&&"function"==typeof e.methods[o]&&(r=e.methods[o]),i.push({test:e.rules[o],params:t,method:r})}}}),i.length>0){let e=[];i.forEach(n=>{e.push(n.test(t,r,n.params))}),Promise.all(e).then(e=>{let o=!1;for(let t=0;t<e.length;t++)if(e[t]){o=i[t];break}if(o&&o.method)n(o.method(t,r,o.params));else{if(o&&!o.method)return a({code:400,message:"Missing Methods."});if(!o)return a({code:400,message:"Permission Denied"})}}).catch(e=>{if(e&&e.message)return a(e);a({code:400,message:"Permission Denied - "+e.toString()})})}else a({code:400,message:"Missing Permissions"})})}return"undefined"!=typeof module&&module&&module.exports&&(module.exports=t),"undefined"!=typeof module&&module&&module.exports&&(module.exports=r),"undefined"!=typeof module&&module&&module.exports&&(module.exports=n),e.Database=function(e){let t={put:(e,t,r)=>new Promise((n,a)=>{if(!e)return a({code:400,message:"dbName (Database Name) is required."});if(!t)return a({code:400,message:"A key is required."});let o,s=indexedDB.open(e,1);s.onupgradeneeded=(()=>{(o=s.result).createObjectStore(e)}),s.onsuccess=(()=>{let i=(o=s.result).transaction(e,"readwrite");i.objectStore(e).put(r,t),i.oncomplete=(()=>{n({db:e,event:"write",key:t,timestamp:Date.now()}),o.close()}),i.onerror=(e=>{o.close(),a(e)})})}),get:(e,t)=>new Promise((r,n)=>{if(!e)return n({code:400,message:"dbName (Database Name) is required."});if(!t)return n({code:400,message:"A key is required."});let a,o=indexedDB.open(e,1);o.onupgradeneeded=(()=>{(a=o.result).createObjectStore(e)}),o.onsuccess=(()=>{let s=(a=o.result).transaction(e,"readonly"),i=s.objectStore(e).get(t);s.oncomplete=(()=>{r({key:t,value:i.result}),a.close()}),s.onerror=(e=>{a.close(),n(e)})})}),del:(e,t)=>new Promise((r,n)=>{if(!e)return n({code:400,message:"dbName (Database Name) is required."});if(!t)return n({code:400,message:"A key or an array of keys is required."});let a,o=[];o="string"==typeof t?[t]:t;let s=indexedDB.open(e,1);s.onupgradeneeded=(()=>{(a=s.result).createObjectStore(e)}),s.onsuccess=(()=>{let t=(a=s.result).transaction(e,"readwrite"),i=t.objectStore(e);for(let e=0;e<o.length;e++)i.delete(o[e]);t.oncomplete=(()=>{r({db:e,event:"delete",keys:o,timestamp:Date.now()}),a.close()}),t.onerror=(e=>{a.close(),n(e)})})}),list:(e,t)=>new Promise((r,n)=>{if(!e)return n({code:400,message:"dbName (Database Name) is required."});let a,o=indexedDB.open(e,1);o.onupgradeneeded=(()=>{(a=o.result).createObjectStore(e)}),o.onsuccess=(()=>{let s=(a=o.result).transaction(e,"readwrite"),i=s.objectStore(e);t&&"object"==typeof t||(t={});let l,c=[],p=t.gt||"\0",u=t.lt||"￿";t.limit&&(l=parseInt(t.limit));let d="next";t.reverse&&(d="prev");let m=i.openCursor(IDBKeyRange.bound(p,u,!0,!0),d);m.onsuccess=(()=>{let e=m.result;if(!l&&e||c.length<l&&e){let r={};t.values?(r.key=e.primaryKey,r.value=e.value):r=e.primaryKey,c.push(r),e.continue()}}),s.oncomplete=(()=>{a.close(),r(c)}),s.onerror=(e=>{a.close(),n(e)})})}),deleteDB:e=>new Promise((t,r)=>{if(!e)return r({code:400,message:"dbName (Database Name) is required."});let n=indexedDB.deleteDatabase(e);n.onsuccess=(()=>{let r={db:e,event:"deleteDB",timestamp:Date.now()};t(r)}),n.onerror=n.onblocked=(e=>{r({code:400,message:"Error deleting database. "+e.toString()})})}),exportDB:e=>t.list(e,{values:!0}),importDB:(e,t)=>new Promise((r,n)=>{if(!e)return n({code:400,message:"dbName (Database Name) is required."});let a,o=indexedDB.open(e,1);o.onupgradeneeded=(()=>{(a=o.result).createObjectStore(e)}),o.onsuccess=(()=>{let s=(a=o.result).transaction(e,"readwrite"),i=s.objectStore(e);for(let e=0;e<t.length;e++)i.put(t[e].value,t[e].key);s.oncomplete=(()=>{let n={db:e,event:"importDB",keys:t.map(e=>e.key),timestamp:Date.now()};a.close(),r(n)}),s.onerror=(e=>{a.close(),n({code:400,message:"Error importing database. "+e.toString()})})})}),db:e=>{e||(e="test");let r,n={onEvent:e=>{r=e}},a=e=>{r&&"function"==typeof r&&r(e)};return n.put=((r,n)=>new Promise((o,s)=>{t.put(e,r,n).then(e=>{a(e),o(e)}).catch(s)})),n.get=((r,n)=>t.get(e,r)),n.del=(r=>new Promise((n,o)=>{t.del(e,r).then(e=>{a(e),n(e)}).catch(o)})),n.list=(r=>t.list(e,r)),n.deleteDB=(()=>new Promise((r,n)=>{t.deleteDB(e).then(e=>{a(e),r(e)}).catch(n)})),n.exportDB=(()=>t.exportDB(e)),n.importDB=(r=>new Promise((n,o)=>{t.importDB(e,r).then(e=>{a(e),n(e)}).catch(o)})),n}};return t.db(e)},e.memstore=t,e.Channels=r,e.Client=function(e){let t=null,r=null;const n=n=>new Promise(async(a,o)=>{r&&"function"==typeof r&&(t=await r());let s={};s.path=n.path||null,s.method=n.method||null,s.data=n.data||null,s.token=n.token||t||null,fetch(e,{method:"POST",headers:{"content-type":"application/json"},body:JSON.stringify(s)}).then(async e=>{let t=await e.json();return e.status>399?o(t):a(t)})}),a=e=>(t=e,!0),o=e=>{let t=(e=>{let t,r=(t=e?e.toString():"/").toString().replace(/\/\//g,"/").replace(/^\//,"").replace(/\/$/,"").replace(/\/\//g,"/").split("/"),n="/"+r.slice(0,-1).join("/"),a=r.slice(-1)[0],o="";return"/"!==n&&(o="/"),{path:n+o+a,channel:n,key:a,slash:o}})(e).path;return{channel:()=>t,setToken:e=>{a(e)},setTokenHandler:e=>{(e=>(r=e,!0))(e)},request:e=>n({method:e.method||null,path:e.path||t,data:e.data||null,token:e.token||null}),put:e=>((e,t)=>n({method:"put",path:e,data:t}))(t,e),get:e=>((e,t)=>n({method:"get",path:e,data:t}))(t,e),del:()=>(e=>n({method:"del",path:e}))(t),list:e=>((e,t)=>n({method:"list",path:e,data:t}))(t,e),path:e=>{e||(e="/");let r="";return"/"!==t&&(r="/"),o(t+r+e)}}};return o("/")},e.Socket=function(e){let t,r,n,a=null,o=!1;const s=e=>{n&&"function"==typeof n&&n(e),console.error(e)},i=e=>{t&&"function"==typeof t&&t(e)},l=e=>{i("connected"),o=!1},c=e=>{i("disconnected"),o||s("disconnected.")},p=e=>{if(r&&"function"==typeof r)try{e=JSON.parse(e.data),r(e)}catch(e){}},u=e=>{n&&"function"==typeof n&&n(e)};let d={getState:()=>!(!a||1!==a.readyState)};return d.connect=d.open=(()=>{a&&1===a.readyState?s("Already connected."):e?((a=new WebSocket(e)).onopen=l,a.onmessage=p,a.onclose=c,a.onerror=u):s("No server provided.")}),d.send=(e=>{a&&1===a.readyState?a.send(JSON.stringify(e),e=>{e?s(e.toString()):console.log("Message Sent")}):s("Not Connected")}),d.close=(()=>{o=!0,a&&1===a.readyState?a.close():s("Not Connected")}),d.onMessage=(e=>{r=e}),d.onState=(e=>{t=e}),d.onError=(e=>{n=e}),d.setServer=(t=>{e=t}),d},e.Services=function(e={}){const{servicesURL:t,dbName:r,system:n,appName:a,starbase:o}=e;let s=t;n&&(s=t+"/system"),a&&(s=t+"/apps/"+a.toString());const i=o.Database,l=o.Channels,c=o.Client,p=(o.Auth,o.Profiles,o.Admin,l(i(r))),u=o.Auth(c(s+"/auth"),p);return{db:p,auth:u,profiles:o.Profiles(o.Client(s+"/profiles"),u),admin:o.Admin(o.Client(s+"/admin"),u),starbase:o}},e.theRules=n,e.Encryption=function(){return{encrypt:async(e,t={})=>{if(!e||"string"!=typeof e)return Promise.reject({code:400,message:"Message must be a string."});if("object"!=typeof t)return Promise.reject({code:400,message:"Invalid options parameters."});let{password:r,passwordBits:n,iterations:a,hmacBits:o}=t;if(!r&&!n)return Promise.reject({code:400,message:"No password or passwordBits was provided."});let s,i=a||5e5,l=btoa(i.toString()).replace(/\=/g,"").replace(/\+/g,"-").replace(/\//g,"_"),c=(new TextEncoder).encode(e);r&&(s=await crypto.subtle.importKey("raw",(new TextEncoder).encode(r),{name:"PBKDF2"},!1,["deriveBits"])),n&&(s=await crypto.subtle.importKey("raw",new Uint8Array(n),{name:"PBKDF2"},!1,["deriveBits"]));let p=crypto.getRandomValues(new Uint8Array(32)),u=btoa(Array.from(new Uint8Array(p)).map(e=>String.fromCharCode(e)).join("")).replace(/\=/g,"").replace(/\+/g,"-").replace(/\//g,"_"),d=crypto.getRandomValues(new Uint8Array(12)),m=btoa(Array.from(new Uint8Array(d)).map(e=>String.fromCharCode(e)).join("")).replace(/\=/g,"").replace(/\+/g,"-").replace(/\//g,"_"),h=await crypto.subtle.deriveBits({name:"PBKDF2",salt:p,iterations:i,hash:{name:"SHA-256"}},s,512),g=h.slice(32,64),f=await crypto.subtle.importKey("raw",g,{name:"AES-GCM"},!1,["encrypt"]);o||(o=h.slice(0,32));let y=await crypto.subtle.importKey("raw",o,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]),w=await crypto.subtle.encrypt({name:"AES-GCM",iv:d},f,c),b=l+"."+u+"."+m+"."+btoa(Array.from(new Uint8Array(w)).map(e=>String.fromCharCode(e)).join("")).replace(/\=/g,"").replace(/\+/g,"-").replace(/\//g,"_"),v=(new TextEncoder).encode(b),k=await crypto.subtle.sign({name:"HMAC"},y,v);return b+"."+btoa(Array.from(new Uint8Array(k)).map(e=>String.fromCharCode(e)).join("")).replace(/\=/g,"").replace(/\+/g,"-").replace(/\//g,"_")},decrypt:async(e,t={})=>{if(!e||"string"!=typeof e)return Promise.reject({code:400,message:"Encrypted text must be a string."});if("object"!=typeof t)return Promise.reject({code:400,message:"Invalid options parameters."});let{password:r,passwordBits:n,hmacBits:a}=t;if(!r&&!n)return Promise.reject({code:400,message:"No password or passwordBits was provided."});let o,s=e.split("."),i=parseInt(atob(s[0])),l=new Uint8Array(atob(s[1].replace(/-/g,"+").replace(/_/g,"/")).split("").map(e=>e.charCodeAt(0))),c=new Uint8Array(atob(s[2].replace(/-/g,"+").replace(/_/g,"/")).split("").map(e=>e.charCodeAt(0))),p=new Uint8Array(atob(s[3].replace(/-/g,"+").replace(/_/g,"/")).split("").map(e=>e.charCodeAt(0))),u=new Uint8Array(atob(s[4].replace(/-/g,"+").replace(/_/g,"/")).split("").map(e=>e.charCodeAt(0)));r&&(o=await crypto.subtle.importKey("raw",(new TextEncoder).encode(r),{name:"PBKDF2"},!1,["deriveBits"])),n&&(o=await crypto.subtle.importKey("raw",new Uint8Array(n),{name:"PBKDF2"},!1,["deriveBits"]));let d=await crypto.subtle.deriveBits({name:"PBKDF2",salt:l,iterations:i,hash:{name:"SHA-256"}},o,512),m=d.slice(32,64),h=await crypto.subtle.importKey("raw",m,{name:"AES-GCM"},!1,["decrypt"]);a||(a=d.slice(0,32));let g=await crypto.subtle.importKey("raw",a,{name:"HMAC",hash:{name:"SHA-256"}},!1,["verify"]),f=(new TextEncoder).encode(e.split(".").slice(0,4).join("."));if(!await crypto.subtle.verify({name:"HMAC"},g,u,f))return Promise.reject({error:"Password or signature does not match."});let y=await crypto.subtle.decrypt({name:"AES-GCM",iv:c},h,p);return(new TextDecoder).decode(y)}}},e.Auth=function(e=null,t=null,r={}){if(r&&"object"==typeof r||(r={}),!e)throw"Starbase Channels API Client is missing.";if(!t)throw"Starbase Channels Database is missing.";let n=t,a=(t,r)=>e.path("/").request({method:t,data:r}),o=(r.parentChannel||"/auth/token").toString(),s=null,i=null,l=null,c=async e=>{e||(e=null),i=e,n&&await n.path(o).put({token:i}),i&&i.user?(l=i.user,p.user=l):(l=null,p.user=l),s&&"function"==typeof s&&s(i)},p={user:null,getToken:()=>(async()=>new Promise(async(e,t)=>{if(!i&&n){let e=await n.path(o).get().then(e=>e.data).catch(e=>null);e&&e.token&&(i=e.token,c(i))}return i?i.accessExpires<Date.now()?i.refreshExpires>Date.now()?void a("refreshToken",i).then(t=>(c(t),e(t.accessToken))).catch(e=>(c(null),t(e))):(c(null),t({code:400,message:"Invalid or expired token."})):e(i.accessToken):e(null)}))(),onStateChange:e=>{s=e},createUser:(e,t)=>new Promise((r,n)=>{a("createUser",{username:e,password:t}).then(r).catch(n)}),deleteUser:(e,t)=>new Promise((r,n)=>{a("deleteUser",{username:e,password:t}).then(r).catch(n)}),changePassword:(e,t,r)=>new Promise((n,o)=>{a("changePassword",{username:e,password:t,newPassword:r}).then(n).catch(o)}),signIn:(e,t)=>new Promise((r,n)=>{a("signIn",{username:e,password:t}).then(e=>{c(e),r(e)}).catch(e=>{n(e)})}),signOut:()=>new Promise((e,t)=>{c(null),e({message:"Signed out."})})};return n&&p.getToken().catch(e=>{}),p},e.Admin=function(e,t){if(!e)throw"Starbase Channels API Client object is missing.";if(!t)throw"Starbase Authentication object is missing.";return e.setTokenHandler(t.getToken),e},e.Profiles=function(e=null,t=null){if(!e)throw"The Starbase Channels API client is missing";if(!t)throw"The Starbase Authentication client is missing";return{getProfile:async function(r){return e.setToken(await t.getToken()),e.path(r).get()},deleteProfile:async function(r){return e.setToken(await t.getToken()),e.path(r).del()},updateProfile:async function(r,n){return e.setToken(await t.getToken()),e.path(r).put(n)},listProfiles:async function(r){return e.setToken(await t.getToken()),e.list(r)},auth:t}},e.PWA=function(){return{init:e=>{let t,r,n,a,o,s={};return s.sw,(a=document.createElement("button")).innerHTML="Install App",(o=document.createElement("button")).innerHTML="Update App","serviceWorker"in navigator&&navigator.serviceWorker.register(e).then(e=>{s.sw=e,s.sw.onupdatefound=(e=>{n&&"function"==typeof n&&n(o,e)}),o.onclick=(()=>{o.innerHTML="Updating...",s.sw.update().then(()=>{location.reload()})})}),window.addEventListener("beforeinstallprompt",e=>{e.preventDefault(),t=e,a.onclick=(e=>{t.prompt()}),r&&"function"==typeof r&&r(a,t)}),s.onInstallReady=(e=>{r=e}),s.onUpdateReady=(e=>{n=e}),s.update=(()=>s.sw.update()),s},SWCache:e=>{self.addEventListener("install",function(t){t.waitUntil(caches.open("sw-cache").then(t=>t.addAll(e)))}),self.addEventListener("fetch",function(e){"GET"===e.request.method&&e.respondWith(caches.match(e.request).then(function(t){return t||fetch(e.request).then(e=>e)}))})}}},e}